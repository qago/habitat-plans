
# defaults for jenkins continuous integration server

# pulled in from the init script; makes things easier.
NAME=jenkins

# location of java
JAVA=java

# arguments to pass to java
JAVA_ARGS="-Djenkins.install.runSetupWizard=false"

PIDFILE={{pkg.svc_path}}/var/run/jenkins/jenkins.pid

# user and group to be invoked as (default to jenkins)
JENKINS_USER=hab
JENKINS_GROUP=hab

# location of the jenkins war file
JENKINS_WAR={{pkgPathFor "core/jenkins"}}/jenkins.war

# jenkins home location
JENKINS_HOME={{pkg.svc_data_path}}

# set this to false if you don't want Hudson to run by itself
# in this set up, you are expected to provide a servlet container
# to host jenkins.
RUN_STANDALONE=true

# log location.  this may be a syslog facility.priority
JENKINS_LOG={{pkg.svc_path}}/var/log/jenkins/$NAME.log

# OS LIMITS SETUP
#   comment this out to observe /etc/security/limits.conf
#   this is on by default because http://github.com/jenkinsci/jenkins/commit/2fb288474e980d0e7ff9c4a3b768874835a3e92e
#   reported that Ubuntu's PAM configuration doesn't include pam_limits.so, and as a result the # of file
#   descriptors are forced to 1024 regardless of /etc/security/limits.conf
MAXOPENFILES=8192

# address bound to HTTP connector (default 0.0.0.0)
HTTP_LISTEN_ADDRESS="0.0.0.0"

# port for HTTP connector (default 8080; disable with -1)
HTTP_PORT=8080

# port for AJP connector (disabled by default)
AJP_PORT=-1

# servlet context, important if you want to use apache proxying
PREFIX=/

# arguments to pass to jenkins.
# --javahome=$JAVA_HOME
# --httpPort=$HTTP_PORT (default 8080; disable with -1)
# --httpsPort=$HTTP_PORT
# --ajp13Port=$AJP_PORT
# --argumentsRealm.passwd.$ADMIN_USER=[password]
# --argumentsRealm.roles.$ADMIN_USER=admin
# --webroot=~/.jenkins/war
# --prefix=$PREFIX

JENKINS_ARGS="--webroot={{pkg.svc_path}}/var/cache/jenkins/war --httpListenAddress=$HTTP_LISTEN_ADDRESS --httpPort=$HTTP_PORT --ajp13Port=$AJP_PORT"