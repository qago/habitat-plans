{{#if cfg.platform.linux }}

{{ #each cfg.settings.browsers.chrome.docker.versions as |version| ~}}
docker pull selenoid/vnc:chrome_{{version.browser}}
{{/each ~}}

{{#each cfg.settings.browsers.firefox.docker.versions as |version| ~}}
docker pull selenoid/vnc:firefox_{{version.browser}}
{{/each ~}}

{{/if}}

{{#if cfg.platform.windows }}
echo "hello from windows!"

$headless_selenium_for_win_pkg = "qago/headless-selenium-for-win"

if (-Not $(hab pkg env $headless_selenium_for_win_pkg)) {
   hab pkg install $headless_selenium_for_win_pkg -c unstable
}

{{ #each cfg.settings.browsers.chrome.windows.versions as |version| ~}}
$chrome_pkg = "qago/google-chrome/{{version.browser}}"
$chromedriver_pkg = "qago/chromedriver/{{version.driver}}"

if (-Not $(hab pkg env $chrome_pkg)) {
   hab pkg install $chrome_pkg -c unstable
}
if (-Not $(hab pkg env $chromedriver_pkg)) {
   hab pkg install $chromedriver_pkg -c unstable
}
{{/each }}

{{ #each cfg.settings.browsers.firefox.windows.versions as |version| ~}}
$firefox_pkg = "qago/firefox/{{version.browser}}"
$geckodriver_pkg = "qago/geckodriver/{{version.driver}}"

if (-Not $(hab pkg env $firefox_pkg)) {
   hab pkg install $firefox_pkg -c unstable
}
if (-Not $(hab pkg env $geckodriver_pkg)) {
   hab pkg install $geckodriver_pkg -c unstable
}
{{/each }}

{{ #each cfg.settings.browsers.ie.windows.versions as |version| ~}}
$iedriver_pkg = "qago/iedriver/{{version.driver}}"

if (-Not $(hab pkg env $iedriver_pkg)) {
   hab pkg install $iedriver_pkg -c unstable
}
{{/each }}

{{/if}}